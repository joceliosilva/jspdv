/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.jscomp.jspdv;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

/**
 *
 * @author Esc_Big03
 */
public class TelaVendaPdv extends javax.swing.JFrame {
   private static final String URL = "jdbc:mysql://localhost:3306/pdv";
    private static final String USUARIO = "root";
    private static final String SENHA = "";
    private DecimalFormat decimalFormat = new DecimalFormat("#0.00");
    private List<Produto> carrinho = new ArrayList<>();
    private double valorTotal = 0.0;
 
    
    public TelaVendaPdv() {
        initComponents();
        codigoBarrasTextField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    adicionarProduto();
                }
            }
            
        } 
        
        );
        valorPagoTextField.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    atualizarTroco();
                }
            }
    
    
    });}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        codigoBarrasTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        carrinhoTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        valorTotalLabel = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        valorPagoTextField = new javax.swing.JTextField();
        trocoLabel = new javax.swing.JTextField();
        bntFinalizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("DIGITE OU BIPE O CÃ“DIGO");

        codigoBarrasTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigoBarrasTextFieldActionPerformed(evt);
            }
        });

        carrinhoTextArea.setColumns(20);
        carrinhoTextArea.setRows(5);
        jScrollPane1.setViewportView(carrinhoTextArea);

        jLabel2.setText("VALOR TOTAL:");

        valorTotalLabel.setEditable(false);

        jLabel3.setText("TROCO:");

        jLabel4.setText("VALOR PAGO:");

        valorPagoTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorPagoTextFieldActionPerformed(evt);
            }
        });

        trocoLabel.setEditable(false);

        bntFinalizar.setText("FINALIZAR");
        bntFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(codigoBarrasTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(bntFinalizar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(valorPagoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(valorTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(trocoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(46, 46, 46))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(85, 85, 85))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(71, 71, 71))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(71, 71, 71))))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(190, 190, 190))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(codigoBarrasTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(valorTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valorPagoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(trocoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bntFinalizar)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void codigoBarrasTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigoBarrasTextFieldActionPerformed

    }//GEN-LAST:event_codigoBarrasTextFieldActionPerformed

    private void bntFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntFinalizarActionPerformed
        finalizarVenda();
    }//GEN-LAST:event_bntFinalizarActionPerformed

    private void valorPagoTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorPagoTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorPagoTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVendaPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVendaPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVendaPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVendaPdv.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVendaPdv().setVisible(true);
            }
        });
    }
    private void adicionarProduto() {
        String codigoBarras = codigoBarrasTextField.getText();
        Produto produto = buscarProdutoNoBanco(codigoBarras);

        if (produto != null) {
            carrinho.add(produto);
            valorTotal += produto.getPreco();
            atualizarCarrinho();
            codigoBarrasTextField.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Produto nÃ£o encontrado.");
        }
    }

    private Produto buscarProdutoNoBanco(String codigoBarras) {
        try (Connection conexao = DriverManager.getConnection(URL, USUARIO, SENHA)) {
            String sql = "SELECT * FROM produtos WHERE ean = ?";
            try (PreparedStatement stmt = conexao.prepareStatement(sql)) {
                stmt.setString(1, codigoBarras);
                try (ResultSet rs = stmt.executeQuery()) {
                    if (rs.next()) {
                        int id = rs.getInt("id");
                        String nome = rs.getString("nome");
                        double preco = rs.getDouble("preco");

                        return new Produto(id, nome, preco);
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

    private void atualizarCarrinho() {
        carrinhoTextArea.setText("");
        for (Produto produto : carrinho) {
            carrinhoTextArea.append(produto.getNome() + " - R$" + decimalFormat.format(produto.getPreco()) + "\n");
        }
        valorTotalLabel.setText("R$" + String.format("%.2f", valorTotal));

        // Atualiza o troco ao adicionar um produto
        atualizarTroco();
    }

    private void finalizarVenda() {
        try {
            double valorPago = Double.parseDouble(valorPagoTextField.getText());
            double troco = valorPago - valorTotal;
            if (troco >= 0) {
                List<ItemVenda> itensVenda = new ArrayList<>();
                for (Produto produto : carrinho) {
                    ItemVenda item = new ItemVenda(produto.getNome(), produto.getPreco());
                    itensVenda.add(item);
                }

                String cupomText = gerarCupom(itensVenda, valorTotal, valorPago, troco);

                carrinho.clear();
                valorTotal = 0.0;
                atualizarCarrinho();
                abrirJanelaCupom(cupomText);
            } else {
                JOptionPane.showMessageDialog(this, "Valor pago insuficiente. Verifique o valor pago.");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Insira um valor pago vÃ¡lido.");
        }
    }

    private String gerarCupom(List<ItemVenda> itens, double valorTotal, double valorPago, double troco) {
        StringBuilder cupomText = new StringBuilder();

        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");

        cupomText.append("========== Cupom de Venda ==========\n");
        cupomText.append("JS SISTEMAS INFO\n");
        cupomText.append("Data da Venda: " + sdf.format(new java.util.Date()) + "\n");
        cupomText.append("====================================\n");
        cupomText.append("Itens Comprados:\n");

        for (ItemVenda item : itens) {
            cupomText.append(item.getNome() + " - R$" + item.getPreco() + "\n");
        }

        cupomText.append("====================================\n");
        cupomText.append("Valor Total: R$" + String.format("%.2f", valorTotal) + "\n");
        cupomText.append("Valor Pago: R$" + String.format("%.2f", valorPago) + "\n");
        cupomText.append("Troco: R$" + String.format("%.2f", troco) + "\n");

        return cupomText.toString();
    }

    private void abrirJanelaCupom(String cupomText) {
        JFrame cupomFrame = new JFrame("Cupom de Venda");
        cupomFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        cupomFrame.setSize(400, 400);
        CupomView cupomView = new CupomView(cupomText);
        cupomFrame.add(cupomView);
       // JTextArea cupomTextArea = new JTextArea(cupomText);
       
        //JScrollPane scrollPane = new JScrollPane(cupomView);
       // cupomFrame.add(scrollPane);

        cupomFrame.setLocationRelativeTo(null);
        cupomFrame.setVisible(true);
        trocoLabel.setText(" ");
        valorPagoTextField.setText(" ");
}
        
        
    
        private void atualizarTroco() {
        try {
            double valorPago = Double.parseDouble(valorPagoTextField.getText());
            double troco = valorPago - valorTotal;
            trocoLabel.setText("R$" + String.format("%.2f", troco));
        } catch (NumberFormatException e) {
            trocoLabel.setText(" ");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntFinalizar;
    private javax.swing.JTextArea carrinhoTextArea;
    public javax.swing.JTextField codigoBarrasTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField trocoLabel;
    private javax.swing.JTextField valorPagoTextField;
    private javax.swing.JTextField valorTotalLabel;
    // End of variables declaration//GEN-END:variables
}
